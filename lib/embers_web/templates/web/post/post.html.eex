<%= if !is_nil(@post.deleted_at) and !assigns[:show_deleted] do %>
  <%= render("_post_tombstone.html") %>
<% else %>
<article
  <%= if assigns[:embedded], do: "embedded" %>
  id="post-<%= encode_id(@post.id) %>"
  data-id="<%= encode_id(@post.id) %>"
  class="post"
  itemscope
  itemtype="https://schema.org/SocialMediaPosting"
  role="article"
  data-tags="<%= Enum.join(@post.tags |> Enum.map(fn x -> x.name end), " ") %>"
  data-author-id="<%= encode_id @post.user.id %>"
  data-controller="<%= attr_list [
    "post",
    "reactable",
    "shareable",
    "medias",
    {"content-warning", ask_nsfw?(@conn, @post) }
  ] %>"
  <%= if ask_nsfw?(@conn, @post), do: "nsfw" %>
  <%= if @post.faved, do: "faved" %>
  >
  <div class="content-warnings">
    <div class="content-warning warning-nsfw">
      <span>NSFW: </span>
      <button
        class="button danger button-small"
        data-target="content-warning.button"
        data-action="content-warning#toggle"
      >
        <%= gettext("Show") %>
      </button>
    </div>
  </div>
  <section class="post-wrapper">
    <header>
      <%= render(EmbersWeb.Web.UserView, "avatar.html", avatar: @post.user.meta.avatar.small, size: "medium") %>
      <div class="post-details">
        <div class="details-top">
          <%= labeled_link(@post.user.username,
            to: decoded_path(:user_path, Endpoint, :show, @post.user.canonical),
            label: @post.user.username,
            class: "username",
            "up-preload": true
          )
          %>
        </div>
        <div class="details-bottom">
          <%= link(to: post_path(Endpoint, :show, encode_id(@post.id)), itemprop: "url") do %>
            <time
              datetime="<%= @post.inserted_at %>"
              pubdate="<%= @post.inserted_at %>"
              itemprop="datePublished">
              <%= time_ago(@post.inserted_at) %>
            </time>
          <% end %>
          <%= link(to: post_path(Endpoint, :show, encode_id(@post.id)), class: "post-id-link") do %>
            >><%= encode_id(@post.id) %>
          <% end %>
        </div>
      </div>
      <post-actions></post-actions>
      <%# <%= render("_post_actions.html", assigns) %>
    </header>
    <%= if !is_nil(assigns[:sharers]) and length(@sharers) > 0 do %>
      <% sharers = Enum.uniq(@sharers) %>
      <%
        sharers_avatars =
          Enum.take(sharers, 3)
          |> Enum.map(fn x -> x.meta.avatar.small end)
      %>
      <div class="post-sharers">
        <%= for avatar <- sharers_avatars do %>
          <%= render(EmbersWeb.Web.UserView, "avatar.html", avatar: avatar, size: "medium") %>
        <% end %>
        <span>
        <%
          build_user_link = fn user ->
            labeled_link(user.username,
              to: decoded_path(:user_path, Endpoint, :show, user.canonical)
            )
            |> safe_to_string()
          end
        %>
        <%= case length(sharers) do
          1 ->
            [user1] = sharers
            user1 = build_user_link.(user1)
            raw gettext("Shared by %{user1}", user1: user1)
          2 ->
            [user1, user2] = sharers
            user1 = build_user_link.(user1)
            user2 = build_user_link.(user2)
            raw gettext("Shared by %{user1} and %{user2}",
              user1: user1, user2: user2)
          _ ->
            [user1, user2 | _rest] = sharers
            user1 = build_user_link.(user1)
            user2 = build_user_link.(user2)
            raw gettext("Shared by %{user1}, %{user2} and %{rest} more",
              user1: user1, user2: user2, rest: length(sharers) - 2)
        end %>
        </span>
      </div>
    <% end %>
    <section class="post-content">
      <section class="post-body" itemprop="articleBody">
        <%= @post.body %>
        <%= if !is_nil(@post.related_to_id) and assigns[:embedded] do %>
          <%= link(to: post_path(Endpoint, :show, encode_id(@post.related_to_id)), class: "related-link") do %>
            <%= " " <> post_url(Endpoint, :show, encode_id(@post.related_to_id)) %>
          <% end %>
        <% end %>
      </section>
      <%= if length(@post.media) > 0 do %>
        <section class="post-medias">
          <%= render("_media_group.html", medias: @post.media) %>
        </section>
      <% end %>
      <%= if length(@post.links) > 0 do %>
        <%= for link <- @post.links do %>
          <%= EmbersWeb.Web.LinkView.render("link.html", link: link) %>
        <% end %>
      <% end %>
      <%= if has_related?(@post) do %>
        <%= render("post.html", conn: @conn, post: @post.related_to, embedded: true) %>
      <% end %>
    </section>
    <post-tags data-post_id="<%= encode_id(@post.id) %>">
      <%= for tag <- @post.tags do %>
        <post-tag><%= tag.name %></post-tag>
      <% end %>
    </post-tags>
    <footer>
      <div class="stats">
        <div data-target="reactable.reactions" class="reactions">
          <%= build_reactions(@post, @conn) %>
        </div>
        <e-spacer></e-spacer>
        <div>
          <%= if @post.replies_count > 0 do %>
            <a href="<%= post_path(@conn, :show, encode_id(@post.id)) %>" class="stat replies-stat">
              <%= ngettext("1 comment", "%{count} comments", @post.replies_count) %>
            </a>
          <% end %>
          <%= if @post.shares_count > 0 do %>
            <span class="stat shares-stat">
              <%= ngettext("1 time shared", "%{count} times shared", @post.shares_count) %>
            </span>
          <% end %>
        </div>
      </div>
      <%= if authenticated?(@conn) do %>
        <div class="actions">
          <%= unless is_owner?(@conn, @post) do %>
            <%= render("reaction_picker.html") %>
          <% end %>
          <e-spacer></e-spacer>
          <%= link(to: post_path(Endpoint, :show, encode_id(@post.id)), class: "button-link",
            "data-post-modal": encode_id(@post.id)
          ) do %>
            <%= svg_image("comment") %>
          <% end %>
          <button class="plain-button" data-action="shareable#showDialog">
            <%= svg_image("share") %>
          </button>
        </div>
      <% end %>
    </footer>
  </section>
  <%= if assigns[:with_replies] do %>
    <section class="replies" data-controller="post-replies">
      <div class="replies-list" data-target="post-replies.list">
        <%= for reply <- get_replies(@post) do
          render("reply_thread.html", conn: @conn, reply: reply)
        end %>
      </div>
      <post-editor
        compact
        data-action="publish->post-replies#addReply"
        data-parent_id="<%= encode_id(@post.id) %>"
        placeholder="<%= gettext("Reply...") %>"
      ></post-editorcompact>
    </section>
  <% end %>
  <%= if !assigns[:embedded] do %>
    <confirm-dialog padded data-target="post.deleteDialog" data-action="accept->post#delete"
      data-accept-text="<%= gettext("Delete") %>" pending>
      <p class="dialog-title"><%= gettext("Delete post?") %></p>
      <p><%= gettext("This will permanently delete this post") %></p>
    </confirm-dialog>
  <% end %>
  <share-post-dialog data-target="shareable.dialog" padded></share-post-dialog>
  <reactions-dialog data-target="post.reactionsDialog" data-post-id="<%= encode_id(@post.id) %>"></reactions-dialog>
  <media-gallery data-target="medias.gallery">
    <%= if (length @post.links) > 0 do %>
      <%= for link <- @post.links do %>
        <gallery-item
          data-id="<%= encode_id link.id %>"
          data-type="image"
          data-src="<%= link.embed.thumbnail_url %>"
        ></gallery-item>
      <% end %>
    <% end %>
    <%= for media <- @post.media do %>
      <gallery-item
        data-id="<%= encode_id media.id %>"
        data-type="<%= media.type %>"
        data-src="<%= Embers.Media.format_url media.url %>"
      ></gallery-item>
    <% end %>
  </media-galley>
</article>
<% end %>
